// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class RegisteredProgram
{
	public class Row
	{
		public string Course_Name;
		public string Location;
		public string Postal_Code;
		public string Ward;
		public string Avg_Utilization_Rate;
		public string Course_Waitlist;
		public string Visits;
		public string Lat;
		public string Lng;

	}

	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.Course_Name = grid[i][0];
			row.Location = grid[i][1];
			row.Postal_Code = grid[i][2];
			row.Ward = grid[i][3];
			row.Avg_Utilization_Rate = grid[i][4];
			row.Course_Waitlist = grid[i][5];
			row.Visits = grid[i][6];
			row.Lat = grid[i][7];
			row.Lng = grid[i][8];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_Course_Name(string find)
	{
		return rowList.Find(x => x.Course_Name == find);
	}
	public List<Row> FindAll_Course_Name(string find)
	{
		return rowList.FindAll(x => x.Course_Name == find);
	}
	public Row Find_Location(string find)
	{
		return rowList.Find(x => x.Location == find);
	}
	public List<Row> FindAll_Location(string find)
	{
		return rowList.FindAll(x => x.Location == find);
	}
	public Row Find_Postal_Code(string find)
	{
		return rowList.Find(x => x.Postal_Code == find);
	}
	public List<Row> FindAll_Postal_Code(string find)
	{
		return rowList.FindAll(x => x.Postal_Code == find);
	}
	public Row Find_Ward(string find)
	{
		return rowList.Find(x => x.Ward == find);
	}
	public List<Row> FindAll_Ward(string find)
	{
		return rowList.FindAll(x => x.Ward == find);
	}
	public Row Find_Avg_Utilization_Rate(string find)
	{
		return rowList.Find(x => x.Avg_Utilization_Rate == find);
	}
	public List<Row> FindAll_Avg_Utilization_Rate(string find)
	{
		return rowList.FindAll(x => x.Avg_Utilization_Rate == find);
	}
	public Row Find_Course_Waitlist(string find)
	{
		return rowList.Find(x => x.Course_Waitlist == find);
	}
	public List<Row> FindAll_Course_Waitlist(string find)
	{
		return rowList.FindAll(x => x.Course_Waitlist == find);
	}
	public Row Find_Visits(string find)
	{
		return rowList.Find(x => x.Visits == find);
	}
	public List<Row> FindAll_Visits(string find)
	{
		return rowList.FindAll(x => x.Visits == find);
	}
	public Row Find_Lat(string find)
	{
		return rowList.Find(x => x.Lat == find);
	}
	public List<Row> FindAll_Lat(string find)
	{
		return rowList.FindAll(x => x.Lat == find);
	}
	public Row Find_Lng(string find)
	{
		return rowList.Find(x => x.Lng == find);
	}
	public List<Row> FindAll_Lng(string find)
	{
		return rowList.FindAll(x => x.Lng == find);
	}

}
